setcps (120/60/4)

-- Drum patterns
let drumz1 = every 4 (|> sound "drum")
              $ sound "[drum <dr:2>] drum*2"
              # gain 0.6
	            # orbit 0 -- routed to audiochannel 1-2
    drumz2 = sound "[drum <dr:1>] drum [drum <dr:5>] drum /2"
		          # gain 0.6
              # orbit 1 -- routed to audiochannel 3-4
    drumz3 = sound "<techno:1> *4"
		          # room 1.5
		          # size 0.3
		          # gain 0.7
              # orbit 2 -- routed to audiochannel 5-6
    drumz4 = sound "co"
		          # gain 0.6
	            # orbit 3 -- routed to audiochannel 7-8
    drumz5 = sound "[<techno:3> <techno:2>] *2"
              # shape "0 0.18"
		          # gain 0.6
	            # orbit 4 -- routed to audiochannel 9-10
in
d1 $ stackn [drumz1, drumz2, drumz3, drumz4, drumz5]

-- bus signal send/control, 0.5 is full vol
d1 $ ampbus 1 0.5

-- turn it off
d1 $ ampbus 1 0.0


d1 silence

-- Reproduction of piano intro

d2
  $ qtrigger $ note "f e'min d'min c [10,14,17] a'min g'min f"
  # sound "<bass3:0>"
  # sustain 0.1
  # room 0.9
  # size 0.3
  # gain 0.6
  # crush 1
  # bandf 10
  # orbit 5 -- routed to audiochannel 11-12

hush

-- vocal sample

d3
  $ qtrigger
  $ slow 4
  $ loopFirst
  $ chew 4 "0 1*2 2*2 [~ 2]"
  $ ghost' (1/4)
  $ sound "<vocals_c:2>"
  # gain 0.6
  # room 2.0
  # crush 4
  # ring 0.5
  # orbit 6 -- routed to audiochannel 13

solo 3

hush

unsolo 3

d7 silence

-- piano sample

let spread1    = (spread ($) [jux rev, rev])
    spread2    = spread ($) [density 2, rev, slow 2, striate 3, (# speed "0.8")]
    juxrev     = jux rev
    revEffect  = rev
    palindrom  = palindrome
    in d4 $ stack [(slow 2 $ juxrev $ revEffect $ chop 32 $ sound "piano_c" # gain 0.4 # room 1.0 # orbit 7)]

hush

d4 silence
--- haskel function signatures
--- # the same as the pipe operator |=| pipe equals pipe
