cps(130/60/4)

d1
 $ qtrigger
 $ loopAt "2 8"
 $ sound "[<jw_drums:0><jw_drums:5>]"
 # gain "0.6"
 # sustain 4
-- # room 0.9
-- # size 0.9
-- # legato 2
-- # cutoff 2000
-- # resonance 0.6

hush

d1 silence

do
  let drumz1 = sound "[<jw_drum_one_hit:4><808:4>]*4"
             # orbit 1
             # gain 0.8
  let drumz2 = sound "[<jw_drum_one_hit:4><808:4>]*4"
             # orbit 1
             # gain 0.8
             # hpf 300
             # resonance 0.5
  d2 $ stack [ drumz1 ]

hush

once $ qtrigger $ loopAt 12 $ sound "<jw_long_vocals:0>" # unit "s" # sustain 28

d3 $ qtrigger
  $ seqP
      [ (0, 13, sound "<jw_long_vocals:0>" # sustain 13 # cut 1) ]
  # orbit 2
  # gain 0.6
  # room 1.2
  # size 0.9
  # dry 1.5
  # delay "-0.2"

hush

d4 $ qtrigger
  $ note "f'minor7 [49, 53, 56, 60] [51, 54, 58, 61] f'minor7"
  # sound "<bass:0>"
  # legato 1.2
  # cutoff 2000
  # resonance 0.3
  # gain 0.7
  # sustain 0.8
  # room 0.4
  # size 0.6
  # orbit 3

  -- 3️⃣ Optional bass pulse (supports the chords)
d5 $ n "f2 f2 f2 f2" # sound "bass:0"
    # gain 0.6
    # sustain 0.3
    # cutoff 1000
    # lpf 1200
    # orbit 4

d6
 $ qtrigger
 $ chop 4
 $ sound "<jw_short_vocals:0>"
 # orbit 5
 # gain 0.4
 # distort 0.5
 # room 0.9
 # size 0.7
 # sustain 4
 # pan "-0.5 0.5"

d6 silence

d7
  $ qtrigger
  $ loopAt 1.5
  $ sound "<jw_short_vocals:0>"
  # orbit 2
  # delay "0.02"

hush

let pats =
      [ ("a", loopAt 1.5 $ sound "<jw_short_vocals:0>")
      , ("b", loopAt 1 $ sound "<jw_short_vocals:1>")
      ]
in
d4 $ ur 4 "a b" pats [] # orbit 2 # gain 0.8

d5 $ qtrigger $ seqP [
     (0, 4, sound "<jw_vocals:0>")
   , (8, 12, sound "<jw_vocals:1>")
   , (16, 20, sound "<jw_vocals:2>")
   , (24, 28, sound "<jw_vocals:3>")
]  # orbit 2 # gain 0.6 # distort 0.4 # room 0.5 # size 0.5

d1 $ qtrigger $ seqP [
  (0, 1, sound "<jw_short_vocals:0>" # cut 1),
  (2, 3, sound "<jw_short_vocals:1>" # cut 1)
] # orbit 0


hush


d7 $ sound "special_drum_loop"

panic

d4 silence
